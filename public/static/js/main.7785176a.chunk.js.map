{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/NavBar/NavBar.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","ifClicked","id","alt","name","src","image","Wrapper","children","Title","href","message","points","top","NavBar","_ref","App","state","friends","clicked","count","_this","includes","setState","push","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","_this2","this","components_Wrapper_Wrapper","components_NavBar_NavBar","components_Title_Title","map","friend","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"6yDASeA,SANI,SAAAC,GAAK,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAAS,kBAAML,EAAMM,UAAUN,EAAMO,MAClEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,WCAxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCG1CC,SAHD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,KAAGY,KAAK,KAAR,cAAuBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,SACvEZ,EAAAC,EAAAC,cAAA,UAAKH,EAAMgB,QAAX,cAA+BhB,EAAMiB,OAArC,iBAA2DjB,EAAMkB,SCKtDC,SANA,SAAAC,GAAA,IAAGP,EAAHO,EAAGP,SAAH,OACbZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbS,YCmEWQ,oNA9DbC,MAAQ,CACNC,UACAC,QAAS,GACTC,MAAO,EACPP,IAAK,EACLF,QAAS,kBAGXV,UAAY,SAAAC,GACNmB,EAAKJ,MAAME,QAAQG,SAASpB,GAC9BmB,EAAKE,SAAS,CAAEH,MAAO,EAAGD,QAAS,GAAIR,QAAS,6BAGhDU,EAAKJ,MAAME,QAAQK,KAAKtB,GACxBmB,EAAKE,SAAS,CAAEL,QAASG,EAAKI,QAAQJ,EAAKJ,MAAMC,SAAUE,MAAOC,EAAKJ,MAAMG,MAAQ,EAAGT,QAAS,0BAE7FU,EAAKJ,MAAMG,MAAQ,EAAIC,EAAKJ,MAAMJ,KACpCQ,EAAKE,SAAS,CAAEV,IAAKQ,EAAKJ,MAAMG,MAAQ,QAK9CK,QAAU,SAAAC,GAIR,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,2EAIA,IAAAQ,EAAAC,KACP,OACEvC,EAAAC,EAAAC,cAACsC,EAAD,KACExC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,CAAO3B,QAASwB,KAAKlB,MAAMN,QAASC,OAAQuB,KAAKlB,MAAMG,MAAOP,IAAKsB,KAAKlB,MAAMJ,OAG/EsB,KAAKlB,MAAMC,QAAQqB,IAAI,SAAAC,GAAM,OAC5B5C,EAAAC,EAAAC,cAAC2C,EAAD,CACExC,UAAWiC,EAAKjC,UAChBC,GAAIsC,EAAOtC,GACXwC,IAAKF,EAAOtC,GACZI,MAAOkC,EAAOlC,kBAxDRqC,oBCHlBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7785176a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => ( \n    <div className=\"img-container\" onClick={() => props.ifClicked(props.id)}>\n      <img alt={props.name} src={props.image} />\n    </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <a href=\"/\">Clicky Game<h1 className=\"title\">{props.children}\n    <h4>{props.message} | Points: {props.points} | Top Score: {props.top}</h4></h1></a>;\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = ({ children }) => (\r\n  <nav className=\"navbar\">\r\n   {children}\r\n  </nav>\r\n);\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport NavBar from \"./components/NavBar\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clicked: [],\n    count: 0,\n    top: 0,\n    message: \"Game Started\"\n  };\n\n  ifClicked = id => {\n    if (this.state.clicked.includes(id)) {\n      this.setState({ count: 0, clicked: [], message: \"You Guessed Incorrectly\" });\n    }\n    else {\n      this.state.clicked.push(id);\n      this.setState({ friends: this.shuffle(this.state.friends), count: this.state.count + 1, message: \"You Guessed Correctly\" });\n\n      if (this.state.count + 1 > this.state.top) {\n        this.setState({ top: this.state.count + 1 });\n      }\n    }\n  };\n\n  shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <NavBar>\n          <Title message={this.state.message} points={this.state.count} top={this.state.top}></Title>\n        </NavBar>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            ifClicked={this.ifClicked}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}